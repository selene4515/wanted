{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n *\r\n * @returns {boolean} Is navigator online\r\n */\nfunction getIsOnline() {\n  if (typeof window === \"undefined\") {\n    return null;\n  }\n  return navigator.onLine;\n}\n/**\r\n * useOnline hook\r\n *\r\n * Returns true if navigator is online, false if not.\r\n *\r\n * @returns {boolean} The value of navigator.onLine\r\n * @see https://react-hooks.org/docs/useOnline\r\n */\nfunction useOnline() {\n  const [isOnline, setIsOnline] = useState(() => getIsOnline());\n  function setOffline() {\n    setIsOnline(false);\n  }\n  function setOnline() {\n    setIsOnline(true);\n  }\n  // we only needs this to be set on mount\n  // hence []\n  useEffect(() => {\n    // eslint-disable-next-line no-negated-condition\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"online\", setOnline);\n      window.addEventListener(\"offline\", setOffline);\n      return () => {\n        window.removeEventListener(\"online\", setOnline);\n        window.removeEventListener(\"offline\", setOffline);\n      };\n    } else {\n      console.warn(\"useOnline: window is undefined.\");\n      return noop;\n    }\n  }, []);\n  return isOnline;\n}\nexport { useOnline };","map":{"version":3,"names":["useState","useEffect","noop","getIsOnline","window","navigator","onLine","useOnline","isOnline","setIsOnline","setOffline","setOnline","addEventListener","removeEventListener","console","warn"],"sources":["C:/github/wanted/node_modules/rooks/dist/esm/hooks/useOnline.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n *\r\n * @returns {boolean} Is navigator online\r\n */\r\nfunction getIsOnline() {\r\n    if (typeof window === \"undefined\") {\r\n        return null;\r\n    }\r\n    return navigator.onLine;\r\n}\r\n/**\r\n * useOnline hook\r\n *\r\n * Returns true if navigator is online, false if not.\r\n *\r\n * @returns {boolean} The value of navigator.onLine\r\n * @see https://react-hooks.org/docs/useOnline\r\n */\r\nfunction useOnline() {\r\n    const [isOnline, setIsOnline] = useState(() => getIsOnline());\r\n    function setOffline() {\r\n        setIsOnline(false);\r\n    }\r\n    function setOnline() {\r\n        setIsOnline(true);\r\n    }\r\n    // we only needs this to be set on mount\r\n    // hence []\r\n    useEffect(() => {\r\n        // eslint-disable-next-line no-negated-condition\r\n        if (typeof window !== \"undefined\") {\r\n            window.addEventListener(\"online\", setOnline);\r\n            window.addEventListener(\"offline\", setOffline);\r\n            return () => {\r\n                window.removeEventListener(\"online\", setOnline);\r\n                window.removeEventListener(\"offline\", setOffline);\r\n            };\r\n        }\r\n        else {\r\n            console.warn(\"useOnline: window is undefined.\");\r\n            return noop;\r\n        }\r\n    }, []);\r\n    return isOnline;\r\n}\n\nexport { useOnline };\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA,SAASC,WAAW,GAAG;EACnB,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAC/B,OAAO,IAAI;EACf;EACA,OAAOC,SAAS,CAACC,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAAS,GAAG;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAMG,WAAW,EAAE,CAAC;EAC7D,SAASO,UAAU,GAAG;IAClBD,WAAW,CAAC,KAAK,CAAC;EACtB;EACA,SAASE,SAAS,GAAG;IACjBF,WAAW,CAAC,IAAI,CAAC;EACrB;EACA;EACA;EACAR,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAE;MAC/BA,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAED,SAAS,CAAC;MAC5CP,MAAM,CAACQ,gBAAgB,CAAC,SAAS,EAAEF,UAAU,CAAC;MAC9C,OAAO,MAAM;QACTN,MAAM,CAACS,mBAAmB,CAAC,QAAQ,EAAEF,SAAS,CAAC;QAC/CP,MAAM,CAACS,mBAAmB,CAAC,SAAS,EAAEH,UAAU,CAAC;MACrD,CAAC;IACL,CAAC,MACI;MACDI,OAAO,CAACC,IAAI,CAAC,iCAAiC,CAAC;MAC/C,OAAOb,IAAI;IACf;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,OAAOM,QAAQ;AACnB;AAEA,SAASD,SAAS"},"metadata":{},"sourceType":"module"}