{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n * A setInterval hook that calls a callback after a interval duration\r\n * when a condition is true\r\n *\r\n * @param callback The callback to be invoked after interval\r\n * @param intervalDurationMs Amount of time in ms after which to invoke\r\n * @param when The condition which when true, sets the interval\r\n * @param startImmediate If the callback should be invoked immediately\r\n * @see https://react-hooks.org/docs/useIntervalWhen\r\n */\nfunction useIntervalWhen(callback) {\n  let intervalDurationMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let when = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  let startImmediate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  const savedRefCallback = useRef();\n  useEffect(() => {\n    savedRefCallback.current = callback;\n  });\n  function internalCallback() {\n    var _a;\n    (_a = savedRefCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedRefCallback);\n  }\n  useEffect(() => {\n    if (when) {\n      if (startImmediate) {\n        internalCallback();\n      }\n      const interval = window.setInterval(internalCallback, intervalDurationMs);\n      return () => {\n        window.clearInterval(interval);\n      };\n    }\n    return noop;\n  }, [when, intervalDurationMs, startImmediate]);\n}\nexport { useIntervalWhen };","map":{"version":3,"names":["useRef","useEffect","noop","useIntervalWhen","callback","intervalDurationMs","when","startImmediate","savedRefCallback","current","internalCallback","_a","call","interval","window","setInterval","clearInterval"],"sources":["C:/github/wanted/node_modules/rooks/dist/esm/hooks/useIntervalWhen.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n * A setInterval hook that calls a callback after a interval duration\r\n * when a condition is true\r\n *\r\n * @param callback The callback to be invoked after interval\r\n * @param intervalDurationMs Amount of time in ms after which to invoke\r\n * @param when The condition which when true, sets the interval\r\n * @param startImmediate If the callback should be invoked immediately\r\n * @see https://react-hooks.org/docs/useIntervalWhen\r\n */\r\nfunction useIntervalWhen(callback, intervalDurationMs = 0, when = true, startImmediate = false) {\r\n    const savedRefCallback = useRef();\r\n    useEffect(() => {\r\n        savedRefCallback.current = callback;\r\n    });\r\n    function internalCallback() {\r\n        var _a;\r\n        (_a = savedRefCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedRefCallback);\r\n    }\r\n    useEffect(() => {\r\n        if (when) {\r\n            if (startImmediate) {\r\n                internalCallback();\r\n            }\r\n            const interval = window.setInterval(internalCallback, intervalDurationMs);\r\n            return () => {\r\n                window.clearInterval(interval);\r\n            };\r\n        }\r\n        return noop;\r\n    }, [when, intervalDurationMs, startImmediate]);\r\n}\n\nexport { useIntervalWhen };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAe,CAACC,QAAQ,EAA+D;EAAA,IAA7DC,kBAAkB,uEAAG,CAAC;EAAA,IAAEC,IAAI,uEAAG,IAAI;EAAA,IAAEC,cAAc,uEAAG,KAAK;EAC1F,MAAMC,gBAAgB,GAAGR,MAAM,EAAE;EACjCC,SAAS,CAAC,MAAM;IACZO,gBAAgB,CAACC,OAAO,GAAGL,QAAQ;EACvC,CAAC,CAAC;EACF,SAASM,gBAAgB,GAAG;IACxB,IAAIC,EAAE;IACN,CAACA,EAAE,GAAGH,gBAAgB,CAACC,OAAO,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACJ,gBAAgB,CAAC;EAClG;EACAP,SAAS,CAAC,MAAM;IACZ,IAAIK,IAAI,EAAE;MACN,IAAIC,cAAc,EAAE;QAChBG,gBAAgB,EAAE;MACtB;MACA,MAAMG,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAACL,gBAAgB,EAAEL,kBAAkB,CAAC;MACzE,OAAO,MAAM;QACTS,MAAM,CAACE,aAAa,CAACH,QAAQ,CAAC;MAClC,CAAC;IACL;IACA,OAAOX,IAAI;EACf,CAAC,EAAE,CAACI,IAAI,EAAED,kBAAkB,EAAEE,cAAc,CAAC,CAAC;AAClD;AAEA,SAASJ,eAAe"},"metadata":{},"sourceType":"module"}