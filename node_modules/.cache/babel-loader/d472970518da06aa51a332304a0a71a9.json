{"ast":null,"code":"import { noop } from '../utils/noop.js';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useFreshTick } from './useFreshTick.js';\nconst config = {\n  box: \"content-box\"\n};\n/**\r\n *\r\n * useResizeObserverRef hook\r\n *\r\n * Returns a resize observer for a React Ref and fires a callback\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\r\n *\r\n * @param {ResizeObserverCallback} callback Function that needs to be fired on resize\r\n * @param {ResizeObserverOptions} options An options object allowing you to set options for the observation\r\n * @returns {[CallbackRef]} callbackref\r\n * @see https://react-hooks.org/docs/useResizeObserverRef\r\n */\nfunction useResizeObserverRef(callback) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config;\n  const [node, setNode] = useState(null);\n  const freshCallback = useFreshTick(callback);\n  useEffect(() => {\n    if (node) {\n      // Create an observer instance linked to the callback function\n      const observer = new ResizeObserver(freshCallback);\n      // Start observing the target node for resizes\n      observer.observe(node, options);\n      return () => {\n        observer.disconnect();\n      };\n    }\n    return noop;\n  }, [node, freshCallback, options]);\n  const ref = useCallback(node => {\n    setNode(node);\n  }, []);\n  return [ref];\n}\nexport { useResizeObserverRef };","map":{"version":3,"names":["noop","useState","useEffect","useCallback","useFreshTick","config","box","useResizeObserverRef","callback","options","node","setNode","freshCallback","observer","ResizeObserver","observe","disconnect","ref"],"sources":["C:/github/wanted/node_modules/rooks/dist/esm/hooks/useResizeObserverRef.js"],"sourcesContent":["import { noop } from '../utils/noop.js';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useFreshTick } from './useFreshTick.js';\n\nconst config = {\r\n    box: \"content-box\",\r\n};\r\n/**\r\n *\r\n * useResizeObserverRef hook\r\n *\r\n * Returns a resize observer for a React Ref and fires a callback\r\n * https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\r\n *\r\n * @param {ResizeObserverCallback} callback Function that needs to be fired on resize\r\n * @param {ResizeObserverOptions} options An options object allowing you to set options for the observation\r\n * @returns {[CallbackRef]} callbackref\r\n * @see https://react-hooks.org/docs/useResizeObserverRef\r\n */\r\nfunction useResizeObserverRef(callback, options = config) {\r\n    const [node, setNode] = useState(null);\r\n    const freshCallback = useFreshTick(callback);\r\n    useEffect(() => {\r\n        if (node) {\r\n            // Create an observer instance linked to the callback function\r\n            const observer = new ResizeObserver(freshCallback);\r\n            // Start observing the target node for resizes\r\n            observer.observe(node, options);\r\n            return () => {\r\n                observer.disconnect();\r\n            };\r\n        }\r\n        return noop;\r\n    }, [node, freshCallback, options]);\r\n    const ref = useCallback((node) => {\r\n        setNode(node);\r\n    }, []);\r\n    return [ref];\r\n}\n\nexport { useResizeObserverRef };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,YAAY,QAAQ,mBAAmB;AAEhD,MAAMC,MAAM,GAAG;EACXC,GAAG,EAAE;AACT,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoB,CAACC,QAAQ,EAAoB;EAAA,IAAlBC,OAAO,uEAAGJ,MAAM;EACpD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,aAAa,GAAGR,YAAY,CAACI,QAAQ,CAAC;EAC5CN,SAAS,CAAC,MAAM;IACZ,IAAIQ,IAAI,EAAE;MACN;MACA,MAAMG,QAAQ,GAAG,IAAIC,cAAc,CAACF,aAAa,CAAC;MAClD;MACAC,QAAQ,CAACE,OAAO,CAACL,IAAI,EAAED,OAAO,CAAC;MAC/B,OAAO,MAAM;QACTI,QAAQ,CAACG,UAAU,EAAE;MACzB,CAAC;IACL;IACA,OAAOhB,IAAI;EACf,CAAC,EAAE,CAACU,IAAI,EAAEE,aAAa,EAAEH,OAAO,CAAC,CAAC;EAClC,MAAMQ,GAAG,GAAGd,WAAW,CAAEO,IAAI,IAAK;IAC9BC,OAAO,CAACD,IAAI,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACO,GAAG,CAAC;AAChB;AAEA,SAASV,oBAAoB"},"metadata":{},"sourceType":"module"}