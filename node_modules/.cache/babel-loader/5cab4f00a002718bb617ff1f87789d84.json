{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n * A setTimeout hook that calls a callback after a timeout duration\r\n * when a condition is true\r\n *\r\n * @param callback The callback to be invoked after timeout\r\n * @param timeoutDelayMs Amount of time in ms after which to invoke\r\n * @param when The condition which when true, sets the timeout\r\n * @see https://react-hooks.org/docs/useTimeoutWhen\r\n */\nfunction useTimeoutWhen(callback) {\n  let timeoutDelayMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let when = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const savedRefCallback = useRef();\n  useEffect(() => {\n    savedRefCallback.current = callback;\n  });\n  function internalCallback() {\n    var _a;\n    (_a = savedRefCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedRefCallback);\n  }\n  useEffect(() => {\n    if (when) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof window !== \"undefined\") {\n        const timeout = window.setTimeout(internalCallback, timeoutDelayMs);\n        return () => {\n          window.clearTimeout(timeout);\n        };\n      } else {\n        console.warn(\"useTimeoutWhen: window is undefined.\");\n      }\n    }\n    return noop;\n  }, [timeoutDelayMs, when]);\n}\nexport { useTimeoutWhen };","map":{"version":3,"names":["useRef","useEffect","noop","useTimeoutWhen","callback","timeoutDelayMs","when","savedRefCallback","current","internalCallback","_a","call","window","timeout","setTimeout","clearTimeout","console","warn"],"sources":["C:/github/wanted/node_modules/rooks/dist/esm/hooks/useTimeoutWhen.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n * A setTimeout hook that calls a callback after a timeout duration\r\n * when a condition is true\r\n *\r\n * @param callback The callback to be invoked after timeout\r\n * @param timeoutDelayMs Amount of time in ms after which to invoke\r\n * @param when The condition which when true, sets the timeout\r\n * @see https://react-hooks.org/docs/useTimeoutWhen\r\n */\r\nfunction useTimeoutWhen(callback, timeoutDelayMs = 0, when = true) {\r\n    const savedRefCallback = useRef();\r\n    useEffect(() => {\r\n        savedRefCallback.current = callback;\r\n    });\r\n    function internalCallback() {\r\n        var _a;\r\n        (_a = savedRefCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedRefCallback);\r\n    }\r\n    useEffect(() => {\r\n        if (when) {\r\n            // eslint-disable-next-line no-negated-condition\r\n            if (typeof window !== \"undefined\") {\r\n                const timeout = window.setTimeout(internalCallback, timeoutDelayMs);\r\n                return () => {\r\n                    window.clearTimeout(timeout);\r\n                };\r\n            }\r\n            else {\r\n                console.warn(\"useTimeoutWhen: window is undefined.\");\r\n            }\r\n        }\r\n        return noop;\r\n    }, [timeoutDelayMs, when]);\r\n}\n\nexport { useTimeoutWhen };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,IAAI,QAAQ,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAc,CAACC,QAAQ,EAAmC;EAAA,IAAjCC,cAAc,uEAAG,CAAC;EAAA,IAAEC,IAAI,uEAAG,IAAI;EAC7D,MAAMC,gBAAgB,GAAGP,MAAM,EAAE;EACjCC,SAAS,CAAC,MAAM;IACZM,gBAAgB,CAACC,OAAO,GAAGJ,QAAQ;EACvC,CAAC,CAAC;EACF,SAASK,gBAAgB,GAAG;IACxB,IAAIC,EAAE;IACN,CAACA,EAAE,GAAGH,gBAAgB,CAACC,OAAO,MAAM,IAAI,IAAIE,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACJ,gBAAgB,CAAC;EAClG;EACAN,SAAS,CAAC,MAAM;IACZ,IAAIK,IAAI,EAAE;MACN;MACA,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE;QAC/B,MAAMC,OAAO,GAAGD,MAAM,CAACE,UAAU,CAACL,gBAAgB,EAAEJ,cAAc,CAAC;QACnE,OAAO,MAAM;UACTO,MAAM,CAACG,YAAY,CAACF,OAAO,CAAC;QAChC,CAAC;MACL,CAAC,MACI;QACDG,OAAO,CAACC,IAAI,CAAC,sCAAsC,CAAC;MACxD;IACJ;IACA,OAAOf,IAAI;EACf,CAAC,EAAE,CAACG,cAAc,EAAEC,IAAI,CAAC,CAAC;AAC9B;AAEA,SAASH,cAAc"},"metadata":{},"sourceType":"module"}