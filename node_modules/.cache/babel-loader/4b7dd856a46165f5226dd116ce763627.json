{"ast":null,"code":"import { useGlobalObjectEventListener } from './useGlobalObjectEventListener.js';\n\n/**\r\n *  useWindowEventListener hook\r\n *\r\n *  A react hook to an event listener to the window\r\n *\r\n * @param {keyof WindowEventMap} eventName The event to track\r\n * @param {Function} callback The callback to be called on event\r\n * @param {ListenerOptions} listenerOptions The options to be passed to the event listener\r\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\r\n * @returns {undefined}\r\n * @see https://react-hooks.org/docs/useWindowEventListener\r\n */\nfunction useWindowEventListener(eventName, callback) {\n  let listenerOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let isLayoutEffect = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  useGlobalObjectEventListener(global.window, eventName, callback, listenerOptions, true, isLayoutEffect);\n}\nexport { useWindowEventListener };","map":{"version":3,"names":["useGlobalObjectEventListener","useWindowEventListener","eventName","callback","listenerOptions","isLayoutEffect","global","window"],"sources":["C:/github/wanted/node_modules/rooks/dist/esm/hooks/useWindowEventListener.js"],"sourcesContent":["import { useGlobalObjectEventListener } from './useGlobalObjectEventListener.js';\n\n/**\r\n *  useWindowEventListener hook\r\n *\r\n *  A react hook to an event listener to the window\r\n *\r\n * @param {keyof WindowEventMap} eventName The event to track\r\n * @param {Function} callback The callback to be called on event\r\n * @param {ListenerOptions} listenerOptions The options to be passed to the event listener\r\n * @param {boolean} isLayoutEffect Should it use layout effect. Defaults to false\r\n * @returns {undefined}\r\n * @see https://react-hooks.org/docs/useWindowEventListener\r\n */\r\nfunction useWindowEventListener(eventName, callback, listenerOptions = {}, isLayoutEffect = false) {\r\n    useGlobalObjectEventListener(global.window, eventName, callback, listenerOptions, true, isLayoutEffect);\r\n}\n\nexport { useWindowEventListener };\n"],"mappings":"AAAA,SAASA,4BAA4B,QAAQ,mCAAmC;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsB,CAACC,SAAS,EAAEC,QAAQ,EAAgD;EAAA,IAA9CC,eAAe,uEAAG,CAAC,CAAC;EAAA,IAAEC,cAAc,uEAAG,KAAK;EAC7FL,4BAA4B,CAACM,MAAM,CAACC,MAAM,EAAEL,SAAS,EAAEC,QAAQ,EAAEC,eAAe,EAAE,IAAI,EAAEC,cAAc,CAAC;AAC3G;AAEA,SAASJ,sBAAsB"},"metadata":{},"sourceType":"module"}